AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template for an encrypted Amazon S3 bucket. 

  **WARNING** You will be billed for the AWS resources created if you create a stack from this template.

  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
  
  Licensed under the Apache License, Version 2.0 (the "License").
  You may not use this file except in compliance with the License.
  A copy of the License is located at
  
      https://www.apache.org/licenses/LICENSE-2.0
  
  or in the "license" file accompanying this file. This file is distributed 
  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
  express or implied. See the License for the specific language governing 
  permissions and limitations under the License.

Parameters:
  #General:
  NamingPrefix:
    Type: String
    Description: The naming prefix for resources created by this template including S3 buckets
    AllowedPattern: '(?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)'
    ConstraintDescription: bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-)

Resources:
  LoggingBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: LogDeliveryWrite
      BucketName: !Sub 'logs-${NamingPrefix}-${AWS::Region}'

  CloudTrailToLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref LoggingBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AWSCloudTrailAclCheck
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:GetBucketAcl'
          Resource: !Sub 'arn:aws:s3:::${LoggingBucket}'
        - Sid: AWSCloudTrailWrite
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:PutObject'
          Resource: !Sub 'arn:aws:s3:::${LoggingBucket}/AWSLogs/${AWS::AccountId}/*'
          Condition:
            StringEquals:
              's3:x-amz-acl': 'bucket-owner-full-control'

  S3BucketWithEncryption:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketEncryption: 
          ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
      BucketName: !Sub '${NamingPrefix}-crrlab-${AWS::Region}'
#      LoggingConfiguration:
#        DestinationBucketName:
#          !Ref LoggingBucket
#        LogFilePrefix: !Join ['', ['S3logs/', !Sub '${NamingPrefix}-crrlab-${AWS::Region}', '/']]
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration: 
        Status: Enabled 
#    DependsOn: LoggingBucket

  S3ReplicationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: 'Policy used S3 for replication rules'
      ManagedPolicyName: !Sub '${NamingPrefix}-S3-Replication-Policy-${AWS::Region}'
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
            # Source S3 Bucket
          - Effect: Allow
            Action: 
              - 's3:Get'
              - 's3:ListBucket'
            Resource:
              - !Sub 'arn:aws:s3:::${NamingPrefix}-crrlab-${AWS::Region}'
              - !Sub 'arn:aws:s3:::${NamingPrefix}-crrlab-${AWS::Region}/*'
            # Destination S3 Bucket
          - Effect: Allow
            Action:
              - 's3:ReplicateObject'
              - 's3:ReplicateDelete'
              - 's3:ReplicateTags'
              - 's3:GetObjectVersionTagging'
            Resource: !Sub 'arn:aws:s3:::${NamingPrefix}-crrlab-*/*'

  S3ReplicationRole:
    Type: AWS::IAM::Role
    DependsOn: S3ReplicationPolicy
    Properties:
      RoleName: !Sub '${NamingPrefix}-S3-Replication-Role-${AWS::Region}'
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - s3.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref S3ReplicationPolicy

  CloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties: 
      LogGroupName: 'CloudTrail/logs/s3'
      RetentionInDays: 30

  CloudWatchLogsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${NamingPrefix}-CloudWatchLogsRole-${AWS::Region}'
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess

  WriteCloudTrail:
    Type: AWS::CloudTrail::Trail
    DependsOn: CloudTrailToLoggingBucketPolicy
    Properties: 
#      CloudWatchLogsLogGroupArn: !GetAtt CloudWatchLogGroup.Arn
#      CloudWatchLogsRoleArn: !GettAtt CloudWatchLogsRole.Arn
      EnableLogFileValidation: false
      EventSelectors: 
        - DataResources: 
          - Type: AWS::S3::Object
            Values:
              - !Sub 'arn:aws:s3:::${NamingPrefix}-crrlab-${AWS::Region}'
          IncludeManagementEvents: false
          ReadWriteType: WriteOnly
      IncludeGlobalServiceEvents: false
      IsLogging: true
      IsMultiRegionTrail: false
      S3BucketName: !Ref LoggingBucket

Outputs:
  S3BucketName:
    Value: !Ref S3BucketWithEncryption
    Description: S3 Bucket Name