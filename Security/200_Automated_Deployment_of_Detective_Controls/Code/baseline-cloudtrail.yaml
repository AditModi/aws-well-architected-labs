AWSTemplateFormatVersion: 2010-09-09
Description: >-
  CloudTrail with S3 bucket configured with encryption and data events. 
  **WARNING** You will be billed for the AWS resources created if you create a 
  stack from this template.

  Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
  
  Licensed under the Apache License, Version 2.0 (the "License").
  You may not use this file except in compliance with the License.
  A copy of the License is located at
  
      http://www.apache.org/licenses/LICENSE-2.0
  
  or in the "license" file accompanying this file. This file is distributed 
  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
  express or implied. See the License for the specific language governing 
  permissions and limitations under the License.
Parameters:
  CloudWatchLogsRetentionTime:
    Type: Number
    Description: Number of days to retain logs in CloudWatch Logs. 0=Forever
    Default: '90'
    AllowedValues:
      - '0'
      - '1'
      - '3'
      - '5'
      - '7'
      - '14'
      - '30'
      - '60'
      - '90'
      - '120'
      - '150'
      - '180'
      - '365'
      - '400'
      - '545'
      - '731'
      - '1827'
      - '3653'
  ExpirationDays:
    Type: Number
    Description: Number of days to retain logs in the S3 Bucket before they are automatically deleted
    Default: '2555'
  CloudTrailBucketName:
    Type: String
    Description: The name of the new S3 bucket to create for CloudTrail to send logs to.
    MinLength: '3'
    MaxLength: '63'
    AllowedPattern: '([a-zA-Z0-9]){1}([a-zA-Z0-9-])*'
  EncryptLogs:
    Type: String
    Description: 'OPTIONAL: Use KMS to enrypt logs stored in S3. A new key will be created'
    Default: 'Yes'
    AllowedValues:
      - 'No'
      - 'Yes'
  BucketPolicyExplicitDeny:
    Type: String
    Description: 'OPTIONAL: Explicitly deny destructive actions to the bucket'
    Default: 'No'
    AllowedValues:
      - 'No'
      - 'Yes'
  S3AccessLogsBucketName:
    Type: String
    Description: The name of an existing S3 bucket for storing S3 Access Logs
    Default: ''
Conditions:
  ExplicitDeny: !Equals 
    - !Ref BucketPolicyExplicitDeny
    - 'Yes'
  KMSEncryptLogs: !Equals 
    - !Ref EncryptLogs
    - 'Yes'
  BucketLogging: !Not 
    - !Equals 
      - !Ref S3AccessLogsBucketName
      - ''
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Mandatory
        Parameters:
          - CloudTrailBucketName
      - Label:
          default: Optional
        Parameters:
          - S3AccessLogsBucketName
          - CloudWatchLogsRetentionTime
          - InfrequentAccessTransitionTime
          - EncryptLogs
          - BucketPolicyExplicitDeny
Resources:
  CloudTrailKMSKey:
    DeletionPolicy: Retain
    Condition: KMSEncryptLogs
    Properties:
      Description: KMS Key for Cloudtrail to use to encrypt logs stored in S3
      KeyPolicy:
        Version: 2012-10-17
        Id: Key policy created by CloudTrail
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS:
                - !Join 
                  - ''
                  - - 'arn:aws:iam::'
                    - !Ref 'AWS::AccountId'
                    - ':root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow CloudTrail to encrypt logs
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: 'kms:GenerateDataKey*'
            Resource: '*'
            Condition:
              StringLike:
                'kms:EncryptionContext:aws:cloudtrail:arn': !Join 
                  - ''
                  - - 'arn:aws:cloudtrail:*:'
                    - !Ref 'AWS::AccountId'
                    - ':trail/*'
          - Sid: Allow CloudTrail to describe key
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: 'kms:DescribeKey'
            Resource: '*'
          - Sid: Allow principals in the account to decrypt log files
            Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - 'kms:Decrypt'
              - 'kms:ReEncryptFrom'
            Resource: '*'
            Condition:
              StringEquals:
                'kms:CallerAccount': !Ref 'AWS::AccountId'
              StringLike:
                'kms:EncryptionContext:aws:cloudtrail:arn': !Join 
                  - ''
                  - - 'arn:aws:cloudtrail:*:'
                    - !Ref 'AWS::AccountId'
                    - ':trail/*'
          - Sid: Allow alias creation during setup
            Effect: Allow
            Principal:
              AWS: '*'
            Action: 'kms:CreateAlias'
            Resource: '*'
            Condition:
              StringEquals:
                'kms:ViaService': !Join 
                  - ''
                  - - ec2.
                    - !Ref 'AWS::Region'
                    - .amazonaws.com
                'kms:CallerAccount': !Ref 'AWS::AccountId'
          - Sid: Enable cross account log decryption
            Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - 'kms:Decrypt'
              - 'kms:ReEncryptFrom'
            Resource: '*'
            Condition:
              StringEquals:
                'kms:CallerAccount': !Ref 'AWS::AccountId'
              StringLike:
                'kms:EncryptionContext:aws:cloudtrail:arn': !Join 
                  - ''
                  - - 'arn:aws:cloudtrail:*:'
                    - !Ref 'AWS::AccountId'
                    - ':trail/*'
    Type: 'AWS::KMS::Key'
  CloudTrailDestinationBucket:
    Properties:
      BucketName: !Ref CloudTrailBucketName
      LoggingConfiguration: !If 
        - BucketLogging
        - DestinationBucketName: !Ref S3AccessLogsBucketName
          LogFilePrefix: !Join 
            - ''
            - - !Ref CloudTrailBucketName
              - /
        - !Ref 'AWS::NoValue'
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: Delete
            Status: Enabled
            ExpirationInDays: !Ref ExpirationDays
    DeletionPolicy: Retain
    Type: 'AWS::S3::Bucket'
  BucketPolicy:
    DependsOn:
      - CloudTrailDestinationBucket
    Properties:
      Bucket: !Ref CloudTrailDestinationBucket
      PolicyDocument:
        Id: CloudTrailService
        Statement:
          - !If 
            - ExplicitDeny
            - Action:
                - 's3:DeleteBucket'
                - 's3:DeleteBucketPolicy'
                - 's3:DeleteBucketWebsite'
                - 's3:DeleteObject'
                - 's3:DeleteObjectVersion'
                - 's3:PutAccelerateConfiguration'
                - 's3:PutBucketAcl'
                - 's3:PutBucketCORS'
                - 's3:PutBucketLogging'
                - 's3:PutBucketPolicy'
                - 's3:PutBucketRequestPayment'
                - 's3:PutBucketVersioning'
                - 's3:PutBucketWebsite'
                - 's3:PutLifecycleConfiguration'
                - 's3:PutReplicationConfiguration'
                - 's3:ReplicateDelete'
                - 's3:ReplicateObject'
                - 's3:RestoreObject'
              Effect: Deny
              Principal: '*'
              Resource:
                - !Join 
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref CloudTrailDestinationBucket
                    - /*
                - !Join 
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref CloudTrailDestinationBucket
              Sid: DenyDestructiveActions
            - !Ref 'AWS::NoValue'
          - Action:
              - 's3:GetBucketAcl'
            Principal:
              Service: cloudtrail.amazonaws.com
            Effect: Allow
            Resource:
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref CloudTrailDestinationBucket
            Sid: AllowCloudTrailServiceGetAcl
          - Action:
              - 's3:PutObject'
            Principal:
              Service: cloudtrail.amazonaws.com
            Effect: Allow
            Condition:
              StringEquals:
                's3:x-amz-acl': bucket-owner-full-control
            Resource:
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref CloudTrailDestinationBucket
                  - /*
            Sid: AllowCloudTrailServicePut
          - Action:
             - 's3:PutObject'
            Principal: 
              AWS: 
                - '981588356137'
                - '129689185312'
            Effect: Allow
            Resource:
             - !Join
               - ''
               - - 'arn:aws:s3:::'
                 - !Ref CloudTrailDestinationBucket
                 - /*
            Sid: AllowManagedAccountsCloudtrail
        Version: 2012-10-17
    Type: 'AWS::S3::BucketPolicy'
  Trail:
    Type: 'AWS::CloudTrail::Trail'
    DependsOn:
      - BucketPolicy
      - LogGroup
      - CloudTrailRole
    Properties:
      S3BucketName: !Ref CloudTrailDestinationBucket
      #S3KeyPrefix:
      CloudWatchLogsLogGroupArn: !GetAtt 
        - LogGroup
        - Arn
      CloudWatchLogsRoleArn: !GetAtt 
        - CloudTrailRole
        - Arn
      EnableLogFileValidation: true
      EventSelectors:
        - IncludeManagementEvents: true
        - ReadWriteType: All
        - DataResources:
          - Type: AWS::S3::Object
            Values:
              - "arn:aws:s3:::"
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      IsLogging: true
      KMSKeyId: !If 
        - KMSEncryptLogs
        - !Ref CloudTrailKMSKey
        - !Ref 'AWS::NoValue'
      #SnsTopicName: topicname
      #TrailName: trailname
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref CloudWatchLogsRetentionTime
  CloudTrailRole:
    Type: 'AWS::IAM::Role'
    DependsOn:
      - LogGroup
    Properties:
      RoleName: Baseline-CloudTrail
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'logs:CreateLogStream'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: '*'
            Version: 2012-10-17
          PolicyName: CloudtrailInteractionPolicy
Outputs:
  CloudTrailBucketName:
    Description: S3 bucket for CloudTrail logs
    Value: !Ref CloudTrailDestinationBucket
    Export:
      Name: !Sub '${AWS::StackName}-CloudTrailBucketName'
